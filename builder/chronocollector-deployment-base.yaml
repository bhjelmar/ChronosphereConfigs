apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: chronocollector-deployment
  name: chronocollector-deployment
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: chronocollector-deployment
  name: chronocollector-deployment
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - nodes
  - pods
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/metrics
  verbs:
  - get
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
    - servicemonitors
  verbs:
    - get
    - list
    - watch
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: chronocollector-deployment
  name: chronocollector-deployment
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chronocollector-deployment
subjects:
- kind: ServiceAccount
  name: chronocollector-deployment
  namespace: default
---
apiVersion: v1
data:
  config.yml: |
    # Will be dynamically created
kind: ConfigMap
metadata:
  labels:
      app: chronocollector-deployment
  name: chronocollector-deployment
  namespace: default
---
apiVersion: v1
data:
  address: <add-base64-encoded-token-here>
  api-token: <add-base64-encoded-token-here>
kind: Secret
metadata:
  labels:
    app: chronocollector-deployment
  name: chronocollector-deployment
  namespace: default
type: Opaque
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: chronocollector-deployment
  name: chronocollector-deployment
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chronocollector-deployment
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "3030"
        prometheus.io/scrape: "true"
      labels:
        app: chronocollector-deployment
    spec:
      containers:
      - env:
        - name: LISTEN_ADDRESS
          value: 0.0.0.0:3030
        - name: GATEWAY_ADDRESS
          valueFrom:
            secretKeyRef:
              key: address
              name: chronocollector-deployment
        - name: LOGGING_LEVEL
          value: info
        - name: API_TOKEN
          valueFrom:
            secretKeyRef:
              key: api-token
              name: chronocollector-deployment
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: KUBERNETES_CLUSTER_NAME
          value: default
        - name: KUBERNETES_KUBELET_MONITORING_ENABLED
          value: "false"
        - name: KUBERNETES_POD_NAME
          valueFrom:
           fieldRef:
             fieldPath: metadata.name
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: gcr.io/chronosphereio/chronocollector:v0.101.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: chronocollector-deployment
        ports:
        - containerPort: 3030
          name: http
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 1000m
            memory: 512Mi
        volumeMounts:
        - mountPath: /etc/chronocollector
          name: chronocollector-deployment
      serviceAccountName: chronocollector-deployment
      terminationGracePeriodSeconds: 5
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: chronocollector-deployment
        name: chronocollector-deployment
